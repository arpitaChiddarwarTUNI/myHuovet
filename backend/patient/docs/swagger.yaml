basePath: /
definitions:
  models.DeleteFAilResponse:
    properties:
      message:
        example: deleting fail
        type: string
    type: object
  models.DeleteResponse:
    properties:
      message:
        example: delete success
        type: string
    type: object
  models.PatientAddJSON:
    properties:
      breedId:
        example: 1
        type: integer
      customerId:
        example: 1
        type: integer
      dateOfBirth:
        example: "2022-05-11"
        type: string
      microchip:
        example: abcdefg12345
        type: string
      name:
        example: Puppe
        type: string
      sex:
        example: Male
        type: string
      weight:
        example: 12
        type: integer
    type: object
  models.PatientDB:
    properties:
      breedId:
        example: 1
        type: integer
      customerId:
        example: 1
        type: integer
      dateOfBirth:
        $ref: '#/definitions/sql.NullString'
      id:
        type: integer
      microchip:
        $ref: '#/definitions/sql.NullString'
      name:
        example: Puppe
        type: string
      sex:
        example: Male
        type: string
      weight:
        $ref: '#/definitions/sql.NullInt64'
    type: object
  models.PatientJSON:
    properties:
      breedId:
        example: 1
        type: integer
      customerId:
        example: 1
        type: integer
      dateOfBirth:
        example: "2022-05-11"
        type: string
      id:
        type: integer
      microchip:
        example: abcdefg12345
        type: string
      name:
        example: Puppe
        type: string
      sex:
        example: Male
        type: string
      weight:
        example: 12
        type: integer
    type: object
  models.SearchFailResponse:
    properties:
      message:
        example: searching fail
        type: string
    type: object
  models.UnathenticatedResponse:
    properties:
      message:
        example: unauthenticated
        type: string
    type: object
  models.UpdateResponse:
    properties:
      message:
        example: update success
        type: string
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
host: localhost:5001
info:
  contact: {}
  description: |-
    This App is used to control the patient. It can:
    - Add a new patient
    - Get the patient
    - Delete the patient
    - Modify the patient
  title: Huovet patient API
  version: "1.0"
paths:
  /patient/addPatient:
    post:
      consumes:
      - application/json
      description: Insert new patient to the patient table in Huovet schema.
      parameters:
      - description: query body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PatientAddJSON'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PatientDB'
        "401":
          description: Unauthentication
          schema:
            $ref: '#/definitions/models.UnathenticatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Add new patient to database
      tags:
      - Patient
  /patient/deletePatient/{id}:
    delete:
      consumes:
      - application/json
      description: Remove all the information of the patient.
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delete success
          schema:
            $ref: '#/definitions/models.DeleteResponse'
        "400":
          description: Deleting fail
          schema:
            $ref: '#/definitions/models.DeleteFAilResponse'
        "401":
          description: Unauthentication
          schema:
            $ref: '#/definitions/models.UnathenticatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete patient information
      tags:
      - Patient
  /patient/getPatient/{id}:
    get:
      consumes:
      - application/json
      description: Return the information of the patient.
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PatientDB'
        "400":
          description: Seacring fail
          schema:
            $ref: '#/definitions/models.SearchFailResponse'
        "401":
          description: Unauthentication
          schema:
            $ref: '#/definitions/models.UnathenticatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Return patient information
      tags:
      - Patient
  /patient/modifyPatient:
    put:
      consumes:
      - application/json
      description: Update the information of the patient.
      parameters:
      - description: query body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PatientJSON'
      produces:
      - application/json
      responses:
        "200":
          description: Update success
          schema:
            $ref: '#/definitions/models.UpdateResponse'
        "401":
          description: Unauthentication
          schema:
            $ref: '#/definitions/models.UnathenticatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Update patient information
      tags:
      - Patient
schemes:
- http
swagger: "2.0"
